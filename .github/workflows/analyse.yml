name: 'Analyse'

on:
  push:
    branches:
      - dev
    tags:
      - '*'
  pull_request:

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          ref: ${{ github.event.pull_request.head.sha }}

      - name: 'Get commit details'
        id: names
        run: |
          if [[ ${{ github.event_name }} == 'pull_request' ]]; then
            TYPE="pull"
          elif [[ "${{ github.ref }}" == "refs/tags/"* ]]; then
            TYPE="tag"
          else
            TYPE="other"
          fi
          python3 scripts/get_env.py "--event_file=${{ github.event_path }}" "--type=$TYPE" || cat "${{ github.event_path }}"
          echo random_hash=$(openssl rand -base64 40 | shasum -a 256 | awk '{print $1}') >> $GITHUB_OUTPUT
          echo "event_type=$TYPE" >> $GITHUB_OUTPUT

      - name: 'Analyse map file'
        if: ${{ !github.event.pull_request.head.repo.fork }}
        run: |
          source scripts/toolchain/fbtenv.sh
          get_size()
          {
            SECTION="$1";
            arm-none-eabi-size \
              -A map_analyser_files/firmware.elf \
              | grep "^$SECTION" | awk '{print $2}'
          }
          export BSS_SIZE="$(get_size ".bss")"
          export TEXT_SIZE="$(get_size ".text")"
          export RODATA_SIZE="$(get_size ".rodata")"
          export DATA_SIZE="$(get_size ".data")"
          export FREE_FLASH_SIZE="$(get_size ".free_flash")"
          
          curl --fail-with-body -X POST \
            -H "Authorization: Bearer *" \
            --data '{ \
               "pull_id": 1, \
               "branch_name": "${{ github.event.inputs.pr_num }}", \
             }'`
            -F "map_file=@/tests/assets/firmware.elf.map" \
            ${{ env.ARCHIVARIUS_URL }}/api/v0/map-file/analyse

#          python3 -m pip install mariadb==1.1.6 cxxfilt==0.3.0
#          python3 scripts/map_parser.py map_analyser_files/firmware.elf.map map_analyser_files/firmware.elf.map.all
#          python3 scripts/map_mariadb_insert.py \
#              ${{ secrets.AMAP_MARIADB_USER }} \
#              ${{ secrets.AMAP_MARIADB_PASSWORD }} \
#              ${{ secrets.AMAP_MARIADB_HOST }} \
#              ${{ secrets.AMAP_MARIADB_PORT }} \
#              ${{ secrets.AMAP_MARIADB_DATABASE }} \
#              map_analyser_files/firmware.elf.map.all
